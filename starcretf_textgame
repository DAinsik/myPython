from random import * 
class Unit:       # 유닛의 공통적인 정보(클래스 생성)
  def __init__(self,name,hp,speed):
    self.name = name
    self.hp = hp
    self.speed = speed
    print("{0}유닛이 생성되었습니다.".format(name))
    
  def move(self,locatioin):  # 유닛의 움직임 정보
    print("{0} : {1} 방향으로 이동합니다. [속도는 {2}]".format(self.name,locatioin,self.speed))
  
  def damaged(self,damage ) #유닛은 데미지를 입는다.
    print("{0} : {1}의 데미지를 입었습니다.".format(self,name.damage))
    self.hp -= damage #데미지를 입으면 그 만큼 hp가 깎인다.
    print("{0} : 현재 체력은 {1} 입니다.".format(self.name,self.hp))
    if self.hp <= 0: #만약 hp가 0이 된다면 유닛은 죽는다.
      print("{0} : 파괴되었습니다.".format(self.name))
      
class AttackUnit(Unit): #Unit 클래스를 상속받는다.( 공격하는 유닛으로써 공격기능이 있다 )
  def __init__(self,name,hp,speed,damage): #AttackUnit에서 사용하는 속성
    Unit.__init__(self,name,hp,speed) #상속받은 Unit를 초기화시킨다.
    self.damage=damage
  def attack(self,location):
    print("{0} : {1} 방향으로 적군을 공격합니다. [공격력은 {2} 입니다.".format(self.name,location,self.damage))
  
class Marine(AttackUnit):
  def __init__(self):
    AttackUnit.__init__(self,"마린",40,1,5)
    
  def stimpack(self):
  if self.hp > 10:
    self.hp -= 10
    print("{0}이 스팀팩을 사용합니다.".format(self.name))
  else:
    print("{0}이 체력이 부족하여 스팀팩을 사용하지 않습니다.".format(self.name))
    
 class Tank(AttackUnit):
  size_developed = False
  
  def __init__(self):
    AttackUnit.__init__(self,"탱크",150,1,35)
    self.seize_mode = False
    
  def set_seize_mode(self):
    if Tank.size_developed == False:
      return
    
    if self.seize_mode == False:
      print("{0} : 시즈모드로 전환합니다." .format(self.name))
      self.damage *= 2
      self.seize_mode = True
      
    else : 
      print("{0} : 시즈모드를 해제합니다. ".format(self.name))
      self.damage /= 2
      self.seize_mode = False
      
 Class Flyable: - 날아다니는 유닛
  def __init__(self,flying_speed):
    self.flying_speed=speed
  def fly(self,location):
    print("{0}이 {1} 방향으로 날아갑니다.".format(self.name,location))
  
 Class FlaybaleAttackUnit(AttackUnit,Flyable):
  def __init__(self,name,hp,damage,flying_speed):
    AttackUnit.__init__(self,name,hp,damage)
    Flyable.__init__(self,flying_speed)
  def move(self,location):
    self.fly(self,name,location)
    
 Class Wraith(FlaybaleAttackUnit):
  def __init__(self):
    FlaybaleAttackUnit.__init__(self,"레이스",80,20,5)
      self.clocked = False
  def clocking(self):
    if self.clocked = True :
      print("{0} : 클로킹 모드 해제합니다.".format(self.name))
      self.clocked = False
    else :
      print("{0}: 클로킹 모드 설정합니다.".format(self.name))
      self.clocked = True
      
 def game_start():
  print("[알림] 게임을 시작합니다.")
 def game_over():
  print("player : GG :")
  print("Player님이 게임에서 퇴장하셨습니다.")
 
game start()

m1 = Marine()
m2 = Marine()
m3 = Marine()

t1 = Tank()
t2= Tank()

w1 = Wraith()

attack_unites=[]
attack_unites.append(m1)
attack_unites.append(m2)
attack_unites.append(m3)
attack_unites.append(t1)
attack_unites.append(t2)
attack_unites.append(w1)

for unit in attack_unites:
    unit.move("1시")
    
 Tank.size_developed = True
print("[알림] 탱크 시즈 모드 개발이 완료되었습니다.")

for unit in attack_unites:
    if isinstance(unit, Marine):
        unit.stimpack()
    elif isinstance(unit,Tank):
        unit.set_eize_mode()
    elif isinstance(unit,Wraith):
        unit.clocking()

for unit in attack_unites:
    unit.damaged(randint(5,21))

game_over()
    
